#Использовать fluent

///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ОписаниеКоманды(Знач КомандаПриложения) Экспорт
	
	КомандаПриложения.Опция("q quiet", Ложь, """Тихий"" режим вывода без лишних сообщений.");
	КомандаПриложения.Опция("r remote", Ложь, "Вывести список пакетов в хабе");
	КомандаПриложения.Опция("a all", Ложь, "Вывести список всех пакетов установленных и доступных в хабе");

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт
	
	ТихийРежим = КомандаПриложения.ЗначениеОпции("quiet");
	ВыводВсехПакетов = КомандаПриложения.ЗначениеОпции("all");
	ВыводПакетовНаХабе = КомандаПриложения.ЗначениеОпции("remote") ИЛИ ВыводВсехПакетов;
	ВыводУстановленныхПакетов = НЕ КомандаПриложения.ЗначениеОпции("remote") ИЛИ ВыводВсехПакетов;
	
	Если ВыводВсехПакетов Тогда
		
		ТекстСообщения = "Все пакеты, установленные и в хабе:";

	Иначе

		ТекстСообщения = ?(ВыводПакетовНаХабе, "Пакеты в хабе:", "Установленные пакеты:");
		
	КонецЕсли;
	
	МенеджерПолучения = Новый МенеджерПолученияПакетов();
	ДоступныеПакеты = МенеджерПолучения.ПолучитьДоступныеПакеты();
		
	ПутьККаталогуПакетов = ПолучитьЗначениеСистемнойНастройки("lib.system");
	КэшУстановленныхПакетов = Новый КэшУстановленныхПакетов(ПутьККаталогуПакетов);
	УстановленныеПакеты = КэшУстановленныхПакетов.ПолучитьУстановленныеПакеты();
	
	Если НЕ ТихийРежим Тогда
		Сообщить(ТекстСообщения);
	КонецЕсли;
	
	Пакеты = Новый ТаблицаЗначений();
	Пакеты.Колонки.Добавить("ИмяПакета");
	Пакеты.Колонки.Добавить("ИменаСерверов");
	Пакеты.Колонки.Добавить("Версия");
	Пакеты.Колонки.Добавить("Выводить");
	
	Для Каждого ДоступныйПакет Из ДоступныеПакеты Цикл

		ИнфоОПакете = Пакеты.Добавить();
		ИнфоОПакете.ИмяПакета = ДоступныйПакет.Ключ;
		ИнфоОПакете.Версия = "";
		ИнфоОПакете.Выводить = ВыводПакетовНаХабе;

		ИменаСерверов = "";
		Для Каждого к из ДоступныйПакет.Значение Цикл
			ИменаСерверов = ИменаСерверов + ?(ПустаяСтрока(ИменаСерверов), "", ", ") + к.Ключ;
		КонецЦикла;
		
		ИнфоОПакете.ИменаСерверов = ИменаСерверов;
	
	КонецЦикла;

	Для Каждого УстановленныйПакет Из УстановленныеПакеты Цикл
		ИмяПакета = УстановленныйПакет.Ключ;
		ОписаниеПакета = УстановленныйПакет.Значение.МетаданныеПакета;
		Версия = "<НЕТ>";
		Если ТипЗнч(ОписаниеПакета) <> Тип("Булево") Тогда
			Версия = ОписаниеПакета.Свойства().Версия;
		КонецЕсли;
		
		ДобавленныйПакет = Пакеты.НайтиСтроки(Новый Структура("ИмяПакета", ИмяПакета));		
		Если ДобавленныйПакет.Количество() Тогда
			ДобавленныйПакет[0].Версия = Версия;
			ДобавленныйПакет[0].Выводить = ИСТИНА; // Пакет есть и на хабе и локально, стоит вывести
			Продолжить;
		КонецЕсли;
		
		ИнфоОПакете = Пакеты.Добавить();
		ИнфоОПакете.ИмяПакета = ИмяПакета;
		ИнфоОПакете.Версия = Версия;
		ИнфоОПакете.ИменаСерверов = "Локальный";
		ИнфоОПакете.Выводить = ВыводУстановленныхПакетов;
	
	КонецЦикла;
	
	Пакеты = ПроцессорыКоллекций.ИзКоллекции(Пакеты)
		.СортироватьПо("ИмяПакета", "(Первый, Второй) -> 
		|	ПроцессорыКоллекций.СтандартнаяФункцияСравненияПрямойПорядок().Выполнить(НРег(Первый), НРег(Второй));"
		)
		.Получить(Тип("ТаблицаЗначений"));
	
	ВывестиИнформациюОПакетах(Пакеты);
	
КонецПроцедуры

Процедура ВывестиИнформациюОПакетах(Пакеты)
	
	ДлинаИмени = СтрДлина("Пакет");
	ДлинаИменСерверов = СтрДлина("Имена серверов");
	ДлинаВерсии = СтрДлина("Версия");

	Для Каждого ИнфоОПакете Из Пакеты Цикл
		
		Если НЕ ИнфоОПакете.Выводить Тогда
			Продолжить;
		КонецЕсли;

		ДлинаИмени = Макс(СтрДлина(ИнфоОПакете.ИмяПакета), ДлинаИмени);
		ДлинаВерсии = Макс(СтрДлина(ИнфоОПакете.Версия), ДлинаВерсии);
		ДлинаИменСерверов = Макс(СтрДлина(ИнфоОПакете.ИменаСерверов), ДлинаИменСерверов);

	КонецЦикла;

	ВывестиШапкуИнфо(ДлинаИмени, ДлинаВерсии, ДлинаИменСерверов);
	Для Каждого ИнфоОПакете Из Пакеты Цикл

		Если НЕ ИнфоОПакете.Выводить Тогда
			Продолжить;
		КонецЕсли;
		
		ВывестиСтрокуИнфо(ДлинаИмени, ИнфоОПакете.ИмяПакета, ДлинаВерсии, ИнфоОПакете.Версия, ДлинаИменСерверов, ИнфоОПакете.ИменаСерверов);
		
	КонецЦикла;
	ВывестиШапкуИнфо(ДлинаИмени, ДлинаВерсии, ДлинаИменСерверов);

КонецПроцедуры

Процедура ВывестиШапкуИнфо(ДлинаИмени, ДлинаВерсии, ДлинаИменСерверов) 
	
	ПустаяСтрока = "                                                                                                        ";
	Сообщить(СтрЗаменить(Лев(ПустаяСтрока, ДлинаИмени + ДлинаВерсии + ДлинаИменСерверов + 6), " ", "-"));
	ВывестиСтрокуИнфо(ДлинаИмени, "Пакет", ДлинаВерсии, "Версия", ДлинаИменСерверов, "Имена серверов");
	Сообщить(СтрЗаменить(Лев(ПустаяСтрока, ДлинаИмени + ДлинаВерсии + ДлинаИменСерверов + 6), " ", "-"));

КонецПроцедуры

Процедура ВывестиСтрокуИнфо(ДлинаИмени, ИмяПакета, ДлинаВерсии, Версия, ДлинаИменСерверов, ИменаСерверов)

	ПустаяСтрока = "                                                                                                        ";
	Шаблон = "%1" + Лев(ПустаяСтрока, ДлинаИмени - СтрДлина(ИмяПакета)) 
		+ " | %2" + Лев(ПустаяСтрока, ДлинаВерсии - СтрДлина(Версия)) 
		+ " | %3" + Лев(ПустаяСтрока, ДлинаИменСерверов - СтрДлина(ИменаСерверов));
	Сообщить(СтрШаблон(Шаблон, ИмяПакета, Версия, ИменаСерверов));
		
КонецПроцедуры

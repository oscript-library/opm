///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ОписаниеКоманды(Знач КомандаПриложения) Экспорт
	
	КомандаПриложения.Опция("l local", Ложь, "Искать в локально установленных пакетах");
	КомандаПриложения.Опция("r regex", Ложь, "Строка поиска будет использоваться как регулярное выражение");

	КомандаПриложения.Аргумент("PACKAGE", "", "Строка поиска пакета")
		.ТМассивСтрок()
		.Обязательный(Истина);

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач КомандаПриложения) Экспорт
	
	УстановкаВЛокальныйКаталог = КомандаПриложения.ЗначениеОпции("local");
	ИспользоватьРегулярныеВыражения = КомандаПриложения.ЗначениеОпции("regex");
	МассивПоисковыхЗапросов = КомандаПриложения.ЗначениеАргумента("PACKAGE");

	ШаблоныПоиска = Новый Массив;

	Для Каждого мТекстЗапроса Из МассивПоисковыхЗапросов Цикл
		
		Если ИспользоватьРегулярныеВыражения Тогда
			
			РегулярноеВыражение = Новый РегулярноеВыражение(мТекстЗапроса);
			РегулярноеВыражение.ИгнорироватьРегистр = Истина;
			
			ШаблоныПоиска.Добавить(РегулярноеВыражение);

		Иначе
			ШаблоныПоиска.Добавить(ВРЕГ(СокрЛП(мТекстЗапроса)));
		КонецЕсли;

	КонецЦикла;
	
	Если УстановкаВЛокальныйКаталог Тогда
		ПутьККаталогуПакетов = ОбъединитьПути(ТекущийКаталог(), КонстантыOpm.ЛокальныйКаталогУстановкиПакетов);
		КэшУстановленныхПакетов = Новый КэшУстановленныхПакетов(ПутьККаталогуПакетов);
	Иначе
		КэшУстановленныхПакетов = КэшУстановленныхПакетовГлобальныхПакетов();
	КонецЕсли;

	УстановленныеПакеты = КэшУстановленныхПакетов.ПолучитьУстановленныеПакеты();

	КоличествоНайденныхПакетов = 0;
	Для Каждого УстановленныйПакет Из УстановленныеПакеты Цикл
		ИмяПакета = УстановленныйПакет.Ключ;
		Для Каждого мШаблонПоиска Из ШаблоныПоиска Цикл
			
			Если Совпадает(мШаблонПоиска, ИмяПакета) Тогда
				КоличествоНайденныхПакетов = КоличествоНайденныхПакетов + 1;
				ВывестиИнформациюОПакете(УстановленныйПакет.Значение);
				Прервать;
			КонецЕсли;

		КонецЦикла;
	
	КонецЦикла;

	Сообщить(СтрШаблон("Найдено пакетов: %1", КоличествоНайденныхПакетов));
	
КонецПроцедуры

Функция Совпадает(Знач ОбъектСравнения, Знач СтрокаПоиска)

	Если ТипЗнч(ОбъектСравнения) = Тип("РегулярноеВыражение") Тогда
		Возврат ОбъектСравнения.Совпадает(СтрокаПоиска);
	Иначе
		Возврат ВРЕГ(СокрЛП(СтрокаПоиска)) = ОбъектСравнения;
	КонецЕсли;

КонецФункции

Процедура ВывестиИнформациюОПакете(Знач УстановленныйПакет)

	Сообщить(СтрШаблон("Каталог: %1", УстановленныйПакет.КаталогПакета));
	Если УстановленныйПакет.Свойство("Перекрывает") Тогда
		
		Для Каждого мПакет Из УстановленныйПакет.Перекрывает Цикл
			Сообщить(СтрШаблон("	! Перекрывает: %1", мПакет.КаталогПакета));
		КонецЦикла;

	КонецЕсли;

	ОписаниеПакета = УстановленныйПакет.МетаданныеПакета;
	Если ТипЗнч(ОписаниеПакета) <> Тип("Булево") Тогда

		
		Свойства = ОписаниеПакета.Свойства();
		Для Каждого мСвойство Из Свойства Цикл
			Сообщить(СтрШаблон("	%1: %2", мСвойство.Ключ, мСвойство.Значение));
		КонецЦикла;

		Зависимости = ОписаниеПакета.Зависимости();
		Зависимости.Сортировать("ДляРазработки");
		Для Каждого мЗависимость Из Зависимости Цикл

			Префикс = ?(мЗависимость.ДляРазработки, "Разработка зависит от", "Зависит от");
			СтрокаВерсииЗависимости = СтрокаВерсииЗависимости(мЗависимость);

			Сообщить(СтрШаблон("		%1 %2%3", Префикс, мЗависимость.ИмяПакета, СтрокаВерсииЗависимости));

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция СтрокаВерсииЗависимости(Знач мЗависимость)

	Подстроки = Новый Массив;

	Если ЗначениеЗаполнено(мЗависимость.МинимальнаяВерсия) Тогда
		Подстроки.Добавить(">=" + мЗависимость.МинимальнаяВерсия);
	КонецЕсли;

	Если ЗначениеЗаполнено(мЗависимость.МаксимальнаяВерсия) Тогда
		Подстроки.Добавить("<=" + мЗависимость.МаксимальнаяВерсия);
	КонецЕсли;

	Если ЗначениеЗаполнено(Подстроки) Тогда
		Возврат " (" + СтрСоединить(Подстроки, ", ") + ")";
	КонецЕсли;

	Возврат "";

КонецФункции

Функция КэшУстановленныхПакетовГлобальныхПакетов()

	ПутьККаталогуПакетов = ПолучитьЗначениеСистемнойНастройки("lib.system");
	КэшУстановленныхПакетов = Новый КэшУстановленныхПакетов(ПутьККаталогуПакетов);

	ДополнительныеКаталоги = ПолучитьЗначениеСистемнойНастройки("lib.additional");
	Если ЗначениеЗаполнено(ДополнительныеКаталоги) Тогда

		Для Каждого мКаталогПоиска Из СтрРазделить(ДополнительныеКаталоги, ";") Цикл
			КэшУстановленныхПакетов.ДобавитьКаталогБиблиотек(СокрЛП(мКаталогПоиска));
		КонецЦикла;

	КонецЕсли;

	Возврат КэшУстановленныхПакетов;

КонецФункции
